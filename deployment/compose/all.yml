name: 'recipe-app-all'

services:
  recipe-share-db:
    image: postgres:16-alpine
    container_name: recipe-share-db
    environment:
      - PGUSER=recipe_user                # SETS USERNAME FOR DEFAULT PSQL CONNECTION
      - PGDATABASE=recipe_db              # SETS DATABASE FOR DEFAULT PSQL CONNECTION
      - POSTGRES_DB=recipe_db             # CREATES A TABLE
      - POSTGRES_USER=recipe_user         # CREATES THE DEFAULT USER
      - POSTGRES_PASSWORD=recipe_secret   # APPLIES PASSWORD TO THE DEFAULT USER
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c pg_isready -U ${POSTGRES_USER} -d" ]
      interval: "10s"
      timeout: "3s"
      retries: 5

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  elasticsearch-rs:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    container_name: elasticsearch-rs
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=password
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      elk-network:

  kibana-rs:
    image: docker.elastic.co/kibana/kibana:8.0.0
    container_name: kibana-rs
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: kibana-server-rs
      ELASTICSEARCH_URL: http://elasticsearch-rs:9200"
      ELASTICSEARCH_HOSTS: '["http://elasticsearch-rs:9200"]'
      ELASTICSEARCH_USERNAME: kibana-user
      ELASTICSEARCH_PASSWORD: password
    depends_on:
      - elasticsearch-rs
    networks:
      elk-network:

  logstash-rs:
    image: docker.elastic.co/logstash/logstash:8.0.0
    container_name: logstash-rs
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m"
    networks:
      elk-network:
    depends_on:
      - elasticsearch-rs

networks:
  elk-network:
    driver: bridge

